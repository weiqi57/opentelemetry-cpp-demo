// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentelemetry/proto/collector/profiles/v1development/profiles_service.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_opentelemetry_2fproto_2fcollector_2fprofiles_2fv1development_2fprofiles_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_opentelemetry_2fproto_2fcollector_2fprofiles_2fv1development_2fprofiles_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "opentelemetry/proto/profiles/v1development/profiles.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_opentelemetry_2fproto_2fcollector_2fprofiles_2fv1development_2fprofiles_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_opentelemetry_2fproto_2fcollector_2fprofiles_2fv1development_2fprofiles_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_opentelemetry_2fproto_2fcollector_2fprofiles_2fv1development_2fprofiles_5fservice_2eproto;
namespace opentelemetry {
namespace proto {
namespace collector {
namespace profiles {
namespace v1development {
class ExportProfilesPartialSuccess;
struct ExportProfilesPartialSuccessDefaultTypeInternal;
extern ExportProfilesPartialSuccessDefaultTypeInternal _ExportProfilesPartialSuccess_default_instance_;
class ExportProfilesServiceRequest;
struct ExportProfilesServiceRequestDefaultTypeInternal;
extern ExportProfilesServiceRequestDefaultTypeInternal _ExportProfilesServiceRequest_default_instance_;
class ExportProfilesServiceResponse;
struct ExportProfilesServiceResponseDefaultTypeInternal;
extern ExportProfilesServiceResponseDefaultTypeInternal _ExportProfilesServiceResponse_default_instance_;
}  // namespace v1development
}  // namespace profiles
}  // namespace collector
}  // namespace proto
}  // namespace opentelemetry
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace opentelemetry {
namespace proto {
namespace collector {
namespace profiles {
namespace v1development {

// ===================================================================


// -------------------------------------------------------------------

class ExportProfilesPartialSuccess final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:opentelemetry.proto.collector.profiles.v1development.ExportProfilesPartialSuccess) */ {
 public:
  inline ExportProfilesPartialSuccess() : ExportProfilesPartialSuccess(nullptr) {}
  ~ExportProfilesPartialSuccess() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExportProfilesPartialSuccess(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExportProfilesPartialSuccess(const ExportProfilesPartialSuccess& from) : ExportProfilesPartialSuccess(nullptr, from) {}
  inline ExportProfilesPartialSuccess(ExportProfilesPartialSuccess&& from) noexcept
      : ExportProfilesPartialSuccess(nullptr, std::move(from)) {}
  inline ExportProfilesPartialSuccess& operator=(const ExportProfilesPartialSuccess& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExportProfilesPartialSuccess& operator=(ExportProfilesPartialSuccess&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExportProfilesPartialSuccess& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExportProfilesPartialSuccess* internal_default_instance() {
    return reinterpret_cast<const ExportProfilesPartialSuccess*>(
        &_ExportProfilesPartialSuccess_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ExportProfilesPartialSuccess& a, ExportProfilesPartialSuccess& b) { a.Swap(&b); }
  inline void Swap(ExportProfilesPartialSuccess* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExportProfilesPartialSuccess* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExportProfilesPartialSuccess* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ExportProfilesPartialSuccess>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExportProfilesPartialSuccess& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExportProfilesPartialSuccess& from) { ExportProfilesPartialSuccess::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExportProfilesPartialSuccess* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "opentelemetry.proto.collector.profiles.v1development.ExportProfilesPartialSuccess"; }

 protected:
  explicit ExportProfilesPartialSuccess(::google::protobuf::Arena* arena);
  ExportProfilesPartialSuccess(::google::protobuf::Arena* arena, const ExportProfilesPartialSuccess& from);
  ExportProfilesPartialSuccess(::google::protobuf::Arena* arena, ExportProfilesPartialSuccess&& from) noexcept
      : ExportProfilesPartialSuccess(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMessageFieldNumber = 2,
    kRejectedProfilesFieldNumber = 1,
  };
  // string error_message = 2;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // int64 rejected_profiles = 1;
  void clear_rejected_profiles() ;
  ::int64_t rejected_profiles() const;
  void set_rejected_profiles(::int64_t value);

  private:
  ::int64_t _internal_rejected_profiles() const;
  void _internal_set_rejected_profiles(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:opentelemetry.proto.collector.profiles.v1development.ExportProfilesPartialSuccess)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      103, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::int64_t rejected_profiles_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_opentelemetry_2fproto_2fcollector_2fprofiles_2fv1development_2fprofiles_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ExportProfilesServiceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceResponse) */ {
 public:
  inline ExportProfilesServiceResponse() : ExportProfilesServiceResponse(nullptr) {}
  ~ExportProfilesServiceResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExportProfilesServiceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExportProfilesServiceResponse(const ExportProfilesServiceResponse& from) : ExportProfilesServiceResponse(nullptr, from) {}
  inline ExportProfilesServiceResponse(ExportProfilesServiceResponse&& from) noexcept
      : ExportProfilesServiceResponse(nullptr, std::move(from)) {}
  inline ExportProfilesServiceResponse& operator=(const ExportProfilesServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExportProfilesServiceResponse& operator=(ExportProfilesServiceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExportProfilesServiceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExportProfilesServiceResponse* internal_default_instance() {
    return reinterpret_cast<const ExportProfilesServiceResponse*>(
        &_ExportProfilesServiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ExportProfilesServiceResponse& a, ExportProfilesServiceResponse& b) { a.Swap(&b); }
  inline void Swap(ExportProfilesServiceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExportProfilesServiceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExportProfilesServiceResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ExportProfilesServiceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExportProfilesServiceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExportProfilesServiceResponse& from) { ExportProfilesServiceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExportProfilesServiceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceResponse"; }

 protected:
  explicit ExportProfilesServiceResponse(::google::protobuf::Arena* arena);
  ExportProfilesServiceResponse(::google::protobuf::Arena* arena, const ExportProfilesServiceResponse& from);
  ExportProfilesServiceResponse(::google::protobuf::Arena* arena, ExportProfilesServiceResponse&& from) noexcept
      : ExportProfilesServiceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPartialSuccessFieldNumber = 1,
  };
  // .opentelemetry.proto.collector.profiles.v1development.ExportProfilesPartialSuccess partial_success = 1;
  bool has_partial_success() const;
  void clear_partial_success() ;
  const ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess& partial_success() const;
  PROTOBUF_NODISCARD ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* release_partial_success();
  ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* mutable_partial_success();
  void set_allocated_partial_success(::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* value);
  void unsafe_arena_set_allocated_partial_success(::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* value);
  ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* unsafe_arena_release_partial_success();

  private:
  const ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess& _internal_partial_success() const;
  ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* _internal_mutable_partial_success();

  public:
  // @@protoc_insertion_point(class_scope:opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* partial_success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_opentelemetry_2fproto_2fcollector_2fprofiles_2fv1development_2fprofiles_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ExportProfilesServiceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceRequest) */ {
 public:
  inline ExportProfilesServiceRequest() : ExportProfilesServiceRequest(nullptr) {}
  ~ExportProfilesServiceRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExportProfilesServiceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExportProfilesServiceRequest(const ExportProfilesServiceRequest& from) : ExportProfilesServiceRequest(nullptr, from) {}
  inline ExportProfilesServiceRequest(ExportProfilesServiceRequest&& from) noexcept
      : ExportProfilesServiceRequest(nullptr, std::move(from)) {}
  inline ExportProfilesServiceRequest& operator=(const ExportProfilesServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExportProfilesServiceRequest& operator=(ExportProfilesServiceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExportProfilesServiceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExportProfilesServiceRequest* internal_default_instance() {
    return reinterpret_cast<const ExportProfilesServiceRequest*>(
        &_ExportProfilesServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ExportProfilesServiceRequest& a, ExportProfilesServiceRequest& b) { a.Swap(&b); }
  inline void Swap(ExportProfilesServiceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExportProfilesServiceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExportProfilesServiceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ExportProfilesServiceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExportProfilesServiceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExportProfilesServiceRequest& from) { ExportProfilesServiceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExportProfilesServiceRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceRequest"; }

 protected:
  explicit ExportProfilesServiceRequest(::google::protobuf::Arena* arena);
  ExportProfilesServiceRequest(::google::protobuf::Arena* arena, const ExportProfilesServiceRequest& from);
  ExportProfilesServiceRequest(::google::protobuf::Arena* arena, ExportProfilesServiceRequest&& from) noexcept
      : ExportProfilesServiceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResourceProfilesFieldNumber = 1,
  };
  // repeated .opentelemetry.proto.profiles.v1development.ResourceProfiles resource_profiles = 1;
  int resource_profiles_size() const;
  private:
  int _internal_resource_profiles_size() const;

  public:
  void clear_resource_profiles() ;
  ::opentelemetry::proto::profiles::v1development::ResourceProfiles* mutable_resource_profiles(int index);
  ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::profiles::v1development::ResourceProfiles>* mutable_resource_profiles();

  private:
  const ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::profiles::v1development::ResourceProfiles>& _internal_resource_profiles() const;
  ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::profiles::v1development::ResourceProfiles>* _internal_mutable_resource_profiles();
  public:
  const ::opentelemetry::proto::profiles::v1development::ResourceProfiles& resource_profiles(int index) const;
  ::opentelemetry::proto::profiles::v1development::ResourceProfiles* add_resource_profiles();
  const ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::profiles::v1development::ResourceProfiles>& resource_profiles() const;
  // @@protoc_insertion_point(class_scope:opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::opentelemetry::proto::profiles::v1development::ResourceProfiles > resource_profiles_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_opentelemetry_2fproto_2fcollector_2fprofiles_2fv1development_2fprofiles_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ExportProfilesServiceRequest

// repeated .opentelemetry.proto.profiles.v1development.ResourceProfiles resource_profiles = 1;
inline int ExportProfilesServiceRequest::_internal_resource_profiles_size() const {
  return _internal_resource_profiles().size();
}
inline int ExportProfilesServiceRequest::resource_profiles_size() const {
  return _internal_resource_profiles_size();
}
inline ::opentelemetry::proto::profiles::v1development::ResourceProfiles* ExportProfilesServiceRequest::mutable_resource_profiles(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceRequest.resource_profiles)
  return _internal_mutable_resource_profiles()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::profiles::v1development::ResourceProfiles>* ExportProfilesServiceRequest::mutable_resource_profiles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceRequest.resource_profiles)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_resource_profiles();
}
inline const ::opentelemetry::proto::profiles::v1development::ResourceProfiles& ExportProfilesServiceRequest::resource_profiles(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceRequest.resource_profiles)
  return _internal_resource_profiles().Get(index);
}
inline ::opentelemetry::proto::profiles::v1development::ResourceProfiles* ExportProfilesServiceRequest::add_resource_profiles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::opentelemetry::proto::profiles::v1development::ResourceProfiles* _add = _internal_mutable_resource_profiles()->Add();
  // @@protoc_insertion_point(field_add:opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceRequest.resource_profiles)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::profiles::v1development::ResourceProfiles>& ExportProfilesServiceRequest::resource_profiles() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceRequest.resource_profiles)
  return _internal_resource_profiles();
}
inline const ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::profiles::v1development::ResourceProfiles>&
ExportProfilesServiceRequest::_internal_resource_profiles() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_profiles_;
}
inline ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::profiles::v1development::ResourceProfiles>*
ExportProfilesServiceRequest::_internal_mutable_resource_profiles() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.resource_profiles_;
}

// -------------------------------------------------------------------

// ExportProfilesServiceResponse

// .opentelemetry.proto.collector.profiles.v1development.ExportProfilesPartialSuccess partial_success = 1;
inline bool ExportProfilesServiceResponse::has_partial_success() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.partial_success_ != nullptr);
  return value;
}
inline void ExportProfilesServiceResponse::clear_partial_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.partial_success_ != nullptr) _impl_.partial_success_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess& ExportProfilesServiceResponse::_internal_partial_success() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* p = _impl_.partial_success_;
  return p != nullptr ? *p : reinterpret_cast<const ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess&>(::opentelemetry::proto::collector::profiles::v1development::_ExportProfilesPartialSuccess_default_instance_);
}
inline const ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess& ExportProfilesServiceResponse::partial_success() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceResponse.partial_success)
  return _internal_partial_success();
}
inline void ExportProfilesServiceResponse::unsafe_arena_set_allocated_partial_success(::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.partial_success_);
  }
  _impl_.partial_success_ = reinterpret_cast<::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceResponse.partial_success)
}
inline ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* ExportProfilesServiceResponse::release_partial_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* released = _impl_.partial_success_;
  _impl_.partial_success_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* ExportProfilesServiceResponse::unsafe_arena_release_partial_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceResponse.partial_success)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* temp = _impl_.partial_success_;
  _impl_.partial_success_ = nullptr;
  return temp;
}
inline ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* ExportProfilesServiceResponse::_internal_mutable_partial_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.partial_success_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess>(GetArena());
    _impl_.partial_success_ = reinterpret_cast<::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess*>(p);
  }
  return _impl_.partial_success_;
}
inline ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* ExportProfilesServiceResponse::mutable_partial_success() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* _msg = _internal_mutable_partial_success();
  // @@protoc_insertion_point(field_mutable:opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceResponse.partial_success)
  return _msg;
}
inline void ExportProfilesServiceResponse::set_allocated_partial_success(::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete (_impl_.partial_success_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.partial_success_ = reinterpret_cast<::opentelemetry::proto::collector::profiles::v1development::ExportProfilesPartialSuccess*>(value);
  // @@protoc_insertion_point(field_set_allocated:opentelemetry.proto.collector.profiles.v1development.ExportProfilesServiceResponse.partial_success)
}

// -------------------------------------------------------------------

// ExportProfilesPartialSuccess

// int64 rejected_profiles = 1;
inline void ExportProfilesPartialSuccess::clear_rejected_profiles() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rejected_profiles_ = ::int64_t{0};
}
inline ::int64_t ExportProfilesPartialSuccess::rejected_profiles() const {
  // @@protoc_insertion_point(field_get:opentelemetry.proto.collector.profiles.v1development.ExportProfilesPartialSuccess.rejected_profiles)
  return _internal_rejected_profiles();
}
inline void ExportProfilesPartialSuccess::set_rejected_profiles(::int64_t value) {
  _internal_set_rejected_profiles(value);
  // @@protoc_insertion_point(field_set:opentelemetry.proto.collector.profiles.v1development.ExportProfilesPartialSuccess.rejected_profiles)
}
inline ::int64_t ExportProfilesPartialSuccess::_internal_rejected_profiles() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rejected_profiles_;
}
inline void ExportProfilesPartialSuccess::_internal_set_rejected_profiles(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rejected_profiles_ = value;
}

// string error_message = 2;
inline void ExportProfilesPartialSuccess::clear_error_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_message_.ClearToEmpty();
}
inline const std::string& ExportProfilesPartialSuccess::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opentelemetry.proto.collector.profiles.v1development.ExportProfilesPartialSuccess.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExportProfilesPartialSuccess::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:opentelemetry.proto.collector.profiles.v1development.ExportProfilesPartialSuccess.error_message)
}
inline std::string* ExportProfilesPartialSuccess::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:opentelemetry.proto.collector.profiles.v1development.ExportProfilesPartialSuccess.error_message)
  return _s;
}
inline const std::string& ExportProfilesPartialSuccess::_internal_error_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_message_.Get();
}
inline void ExportProfilesPartialSuccess::_internal_set_error_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* ExportProfilesPartialSuccess::_internal_mutable_error_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* ExportProfilesPartialSuccess::release_error_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:opentelemetry.proto.collector.profiles.v1development.ExportProfilesPartialSuccess.error_message)
  return _impl_.error_message_.Release();
}
inline void ExportProfilesPartialSuccess::set_allocated_error_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_message_.IsDefault()) {
          _impl_.error_message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:opentelemetry.proto.collector.profiles.v1development.ExportProfilesPartialSuccess.error_message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1development
}  // namespace profiles
}  // namespace collector
}  // namespace proto
}  // namespace opentelemetry


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_opentelemetry_2fproto_2fcollector_2fprofiles_2fv1development_2fprofiles_5fservice_2eproto_2epb_2eh
