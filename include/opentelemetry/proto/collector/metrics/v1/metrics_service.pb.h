// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opentelemetry/proto/collector/metrics/v1/metrics_service.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "opentelemetry/proto/metrics/v1/metrics.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto;
namespace opentelemetry {
namespace proto {
namespace collector {
namespace metrics {
namespace v1 {
class ExportMetricsPartialSuccess;
struct ExportMetricsPartialSuccessDefaultTypeInternal;
extern ExportMetricsPartialSuccessDefaultTypeInternal _ExportMetricsPartialSuccess_default_instance_;
class ExportMetricsServiceRequest;
struct ExportMetricsServiceRequestDefaultTypeInternal;
extern ExportMetricsServiceRequestDefaultTypeInternal _ExportMetricsServiceRequest_default_instance_;
class ExportMetricsServiceResponse;
struct ExportMetricsServiceResponseDefaultTypeInternal;
extern ExportMetricsServiceResponseDefaultTypeInternal _ExportMetricsServiceResponse_default_instance_;
}  // namespace v1
}  // namespace metrics
}  // namespace collector
}  // namespace proto
}  // namespace opentelemetry
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace opentelemetry {
namespace proto {
namespace collector {
namespace metrics {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class ExportMetricsPartialSuccess final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess) */ {
 public:
  inline ExportMetricsPartialSuccess() : ExportMetricsPartialSuccess(nullptr) {}
  ~ExportMetricsPartialSuccess() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExportMetricsPartialSuccess(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExportMetricsPartialSuccess(const ExportMetricsPartialSuccess& from) : ExportMetricsPartialSuccess(nullptr, from) {}
  inline ExportMetricsPartialSuccess(ExportMetricsPartialSuccess&& from) noexcept
      : ExportMetricsPartialSuccess(nullptr, std::move(from)) {}
  inline ExportMetricsPartialSuccess& operator=(const ExportMetricsPartialSuccess& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExportMetricsPartialSuccess& operator=(ExportMetricsPartialSuccess&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExportMetricsPartialSuccess& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExportMetricsPartialSuccess* internal_default_instance() {
    return reinterpret_cast<const ExportMetricsPartialSuccess*>(
        &_ExportMetricsPartialSuccess_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ExportMetricsPartialSuccess& a, ExportMetricsPartialSuccess& b) { a.Swap(&b); }
  inline void Swap(ExportMetricsPartialSuccess* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExportMetricsPartialSuccess* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExportMetricsPartialSuccess* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ExportMetricsPartialSuccess>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExportMetricsPartialSuccess& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExportMetricsPartialSuccess& from) { ExportMetricsPartialSuccess::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExportMetricsPartialSuccess* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess"; }

 protected:
  explicit ExportMetricsPartialSuccess(::google::protobuf::Arena* arena);
  ExportMetricsPartialSuccess(::google::protobuf::Arena* arena, const ExportMetricsPartialSuccess& from);
  ExportMetricsPartialSuccess(::google::protobuf::Arena* arena, ExportMetricsPartialSuccess&& from) noexcept
      : ExportMetricsPartialSuccess(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorMessageFieldNumber = 2,
    kRejectedDataPointsFieldNumber = 1,
  };
  // string error_message = 2;
  void clear_error_message() ;
  const std::string& error_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error_message(Arg_&& arg, Args_... args);
  std::string* mutable_error_message();
  PROTOBUF_NODISCARD std::string* release_error_message();
  void set_allocated_error_message(std::string* value);

  private:
  const std::string& _internal_error_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error_message(
      const std::string& value);
  std::string* _internal_mutable_error_message();

  public:
  // int64 rejected_data_points = 1;
  void clear_rejected_data_points() ;
  ::int64_t rejected_data_points() const;
  void set_rejected_data_points(::int64_t value);

  private:
  ::int64_t _internal_rejected_data_points() const;
  void _internal_set_rejected_data_points(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      90, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr error_message_;
    ::int64_t rejected_data_points_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ExportMetricsServiceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse) */ {
 public:
  inline ExportMetricsServiceResponse() : ExportMetricsServiceResponse(nullptr) {}
  ~ExportMetricsServiceResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExportMetricsServiceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExportMetricsServiceResponse(const ExportMetricsServiceResponse& from) : ExportMetricsServiceResponse(nullptr, from) {}
  inline ExportMetricsServiceResponse(ExportMetricsServiceResponse&& from) noexcept
      : ExportMetricsServiceResponse(nullptr, std::move(from)) {}
  inline ExportMetricsServiceResponse& operator=(const ExportMetricsServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExportMetricsServiceResponse& operator=(ExportMetricsServiceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExportMetricsServiceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExportMetricsServiceResponse* internal_default_instance() {
    return reinterpret_cast<const ExportMetricsServiceResponse*>(
        &_ExportMetricsServiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ExportMetricsServiceResponse& a, ExportMetricsServiceResponse& b) { a.Swap(&b); }
  inline void Swap(ExportMetricsServiceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExportMetricsServiceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExportMetricsServiceResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ExportMetricsServiceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExportMetricsServiceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExportMetricsServiceResponse& from) { ExportMetricsServiceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExportMetricsServiceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse"; }

 protected:
  explicit ExportMetricsServiceResponse(::google::protobuf::Arena* arena);
  ExportMetricsServiceResponse(::google::protobuf::Arena* arena, const ExportMetricsServiceResponse& from);
  ExportMetricsServiceResponse(::google::protobuf::Arena* arena, ExportMetricsServiceResponse&& from) noexcept
      : ExportMetricsServiceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPartialSuccessFieldNumber = 1,
  };
  // .opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess partial_success = 1;
  bool has_partial_success() const;
  void clear_partial_success() ;
  const ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess& partial_success() const;
  PROTOBUF_NODISCARD ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* release_partial_success();
  ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* mutable_partial_success();
  void set_allocated_partial_success(::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* value);
  void unsafe_arena_set_allocated_partial_success(::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* value);
  ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* unsafe_arena_release_partial_success();

  private:
  const ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess& _internal_partial_success() const;
  ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* _internal_mutable_partial_success();

  public:
  // @@protoc_insertion_point(class_scope:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* partial_success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ExportMetricsServiceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest) */ {
 public:
  inline ExportMetricsServiceRequest() : ExportMetricsServiceRequest(nullptr) {}
  ~ExportMetricsServiceRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExportMetricsServiceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExportMetricsServiceRequest(const ExportMetricsServiceRequest& from) : ExportMetricsServiceRequest(nullptr, from) {}
  inline ExportMetricsServiceRequest(ExportMetricsServiceRequest&& from) noexcept
      : ExportMetricsServiceRequest(nullptr, std::move(from)) {}
  inline ExportMetricsServiceRequest& operator=(const ExportMetricsServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExportMetricsServiceRequest& operator=(ExportMetricsServiceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExportMetricsServiceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExportMetricsServiceRequest* internal_default_instance() {
    return reinterpret_cast<const ExportMetricsServiceRequest*>(
        &_ExportMetricsServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ExportMetricsServiceRequest& a, ExportMetricsServiceRequest& b) { a.Swap(&b); }
  inline void Swap(ExportMetricsServiceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExportMetricsServiceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExportMetricsServiceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ExportMetricsServiceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExportMetricsServiceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExportMetricsServiceRequest& from) { ExportMetricsServiceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExportMetricsServiceRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest"; }

 protected:
  explicit ExportMetricsServiceRequest(::google::protobuf::Arena* arena);
  ExportMetricsServiceRequest(::google::protobuf::Arena* arena, const ExportMetricsServiceRequest& from);
  ExportMetricsServiceRequest(::google::protobuf::Arena* arena, ExportMetricsServiceRequest&& from) noexcept
      : ExportMetricsServiceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResourceMetricsFieldNumber = 1,
  };
  // repeated .opentelemetry.proto.metrics.v1.ResourceMetrics resource_metrics = 1;
  int resource_metrics_size() const;
  private:
  int _internal_resource_metrics_size() const;

  public:
  void clear_resource_metrics() ;
  ::opentelemetry::proto::metrics::v1::ResourceMetrics* mutable_resource_metrics(int index);
  ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::metrics::v1::ResourceMetrics>* mutable_resource_metrics();

  private:
  const ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::metrics::v1::ResourceMetrics>& _internal_resource_metrics() const;
  ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::metrics::v1::ResourceMetrics>* _internal_mutable_resource_metrics();
  public:
  const ::opentelemetry::proto::metrics::v1::ResourceMetrics& resource_metrics(int index) const;
  ::opentelemetry::proto::metrics::v1::ResourceMetrics* add_resource_metrics();
  const ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::metrics::v1::ResourceMetrics>& resource_metrics() const;
  // @@protoc_insertion_point(class_scope:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::opentelemetry::proto::metrics::v1::ResourceMetrics > resource_metrics_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ExportMetricsServiceRequest

// repeated .opentelemetry.proto.metrics.v1.ResourceMetrics resource_metrics = 1;
inline int ExportMetricsServiceRequest::_internal_resource_metrics_size() const {
  return _internal_resource_metrics().size();
}
inline int ExportMetricsServiceRequest::resource_metrics_size() const {
  return _internal_resource_metrics_size();
}
inline ::opentelemetry::proto::metrics::v1::ResourceMetrics* ExportMetricsServiceRequest::mutable_resource_metrics(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest.resource_metrics)
  return _internal_mutable_resource_metrics()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::metrics::v1::ResourceMetrics>* ExportMetricsServiceRequest::mutable_resource_metrics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest.resource_metrics)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_resource_metrics();
}
inline const ::opentelemetry::proto::metrics::v1::ResourceMetrics& ExportMetricsServiceRequest::resource_metrics(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest.resource_metrics)
  return _internal_resource_metrics().Get(index);
}
inline ::opentelemetry::proto::metrics::v1::ResourceMetrics* ExportMetricsServiceRequest::add_resource_metrics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::opentelemetry::proto::metrics::v1::ResourceMetrics* _add = _internal_mutable_resource_metrics()->Add();
  // @@protoc_insertion_point(field_add:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest.resource_metrics)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::metrics::v1::ResourceMetrics>& ExportMetricsServiceRequest::resource_metrics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceRequest.resource_metrics)
  return _internal_resource_metrics();
}
inline const ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::metrics::v1::ResourceMetrics>&
ExportMetricsServiceRequest::_internal_resource_metrics() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_metrics_;
}
inline ::google::protobuf::RepeatedPtrField<::opentelemetry::proto::metrics::v1::ResourceMetrics>*
ExportMetricsServiceRequest::_internal_mutable_resource_metrics() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.resource_metrics_;
}

// -------------------------------------------------------------------

// ExportMetricsServiceResponse

// .opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess partial_success = 1;
inline bool ExportMetricsServiceResponse::has_partial_success() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.partial_success_ != nullptr);
  return value;
}
inline void ExportMetricsServiceResponse::clear_partial_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.partial_success_ != nullptr) _impl_.partial_success_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess& ExportMetricsServiceResponse::_internal_partial_success() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* p = _impl_.partial_success_;
  return p != nullptr ? *p : reinterpret_cast<const ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess&>(::opentelemetry::proto::collector::metrics::v1::_ExportMetricsPartialSuccess_default_instance_);
}
inline const ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess& ExportMetricsServiceResponse::partial_success() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse.partial_success)
  return _internal_partial_success();
}
inline void ExportMetricsServiceResponse::unsafe_arena_set_allocated_partial_success(::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.partial_success_);
  }
  _impl_.partial_success_ = reinterpret_cast<::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse.partial_success)
}
inline ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* ExportMetricsServiceResponse::release_partial_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* released = _impl_.partial_success_;
  _impl_.partial_success_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* ExportMetricsServiceResponse::unsafe_arena_release_partial_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse.partial_success)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* temp = _impl_.partial_success_;
  _impl_.partial_success_ = nullptr;
  return temp;
}
inline ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* ExportMetricsServiceResponse::_internal_mutable_partial_success() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.partial_success_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess>(GetArena());
    _impl_.partial_success_ = reinterpret_cast<::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess*>(p);
  }
  return _impl_.partial_success_;
}
inline ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* ExportMetricsServiceResponse::mutable_partial_success() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* _msg = _internal_mutable_partial_success();
  // @@protoc_insertion_point(field_mutable:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse.partial_success)
  return _msg;
}
inline void ExportMetricsServiceResponse::set_allocated_partial_success(::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete (_impl_.partial_success_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.partial_success_ = reinterpret_cast<::opentelemetry::proto::collector::metrics::v1::ExportMetricsPartialSuccess*>(value);
  // @@protoc_insertion_point(field_set_allocated:opentelemetry.proto.collector.metrics.v1.ExportMetricsServiceResponse.partial_success)
}

// -------------------------------------------------------------------

// ExportMetricsPartialSuccess

// int64 rejected_data_points = 1;
inline void ExportMetricsPartialSuccess::clear_rejected_data_points() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rejected_data_points_ = ::int64_t{0};
}
inline ::int64_t ExportMetricsPartialSuccess::rejected_data_points() const {
  // @@protoc_insertion_point(field_get:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess.rejected_data_points)
  return _internal_rejected_data_points();
}
inline void ExportMetricsPartialSuccess::set_rejected_data_points(::int64_t value) {
  _internal_set_rejected_data_points(value);
  // @@protoc_insertion_point(field_set:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess.rejected_data_points)
}
inline ::int64_t ExportMetricsPartialSuccess::_internal_rejected_data_points() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rejected_data_points_;
}
inline void ExportMetricsPartialSuccess::_internal_set_rejected_data_points(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rejected_data_points_ = value;
}

// string error_message = 2;
inline void ExportMetricsPartialSuccess::clear_error_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_message_.ClearToEmpty();
}
inline const std::string& ExportMetricsPartialSuccess::error_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess.error_message)
  return _internal_error_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExportMetricsPartialSuccess::set_error_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess.error_message)
}
inline std::string* ExportMetricsPartialSuccess::mutable_error_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error_message();
  // @@protoc_insertion_point(field_mutable:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess.error_message)
  return _s;
}
inline const std::string& ExportMetricsPartialSuccess::_internal_error_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.error_message_.Get();
}
inline void ExportMetricsPartialSuccess::_internal_set_error_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_message_.Set(value, GetArena());
}
inline std::string* ExportMetricsPartialSuccess::_internal_mutable_error_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.error_message_.Mutable( GetArena());
}
inline std::string* ExportMetricsPartialSuccess::release_error_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess.error_message)
  return _impl_.error_message_.Release();
}
inline void ExportMetricsPartialSuccess::set_allocated_error_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.error_message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_message_.IsDefault()) {
          _impl_.error_message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:opentelemetry.proto.collector.metrics.v1.ExportMetricsPartialSuccess.error_message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace metrics
}  // namespace collector
}  // namespace proto
}  // namespace opentelemetry


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_opentelemetry_2fproto_2fcollector_2fmetrics_2fv1_2fmetrics_5fservice_2eproto_2epb_2eh
